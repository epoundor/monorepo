/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api": {
    get: operations["AppController_getHello"];
  };
  "/api/devices": {
    get: operations["DeviceController_findAll"];
    post: operations["DeviceController_create"];
  };
  "/api/devices/{id}": {
    get: operations["DeviceController_findOne"];
    put: operations["DeviceController_update"];
    delete: operations["DeviceController_remove"];
  };
  "/api/devices/enable/{id}": {
    put: operations["DeviceController_enable"];
  };
  "/api/devices/disable/{id}": {
    put: operations["DeviceController_disable"];
  };
  "/api/devices-assignment": {
    post: operations["DeviceAssignmentController_create"];
  };
  "/api/devices-assignment/{id}": {
    delete: operations["DeviceAssignmentController_remove"];
  };
  "/api/proofs-of-life": {
    get: operations["ProofOfLifeController_findAll"];
    post: operations["ProofOfLifeController_create"];
  };
  "/api/proofs-of-life/last": {
    get: operations["ProofOfLifeController_last"];
  };
  "/api/proofs-of-life/stats": {
    get: operations["ProofOfLifeController_stats"];
  };
  "/api/proofs-of-life/{id}": {
    get: operations["ProofOfLifeController_findOne"];
  };
  "/api/proofs-of-life/verify/{proofId}": {
    put: operations["ProofOfLifeController_verify"];
  };
  "/api/proofs-of-life/registration-numbers/all": {
    get: operations["ProofOfLifeController_getRegistrationNumbers"];
  };
  "/api/proofs-of-life/proofs-by-device/{deviceId}": {
    get: operations["ProofOfLifeController_getProofsByDevice"];
  };
  "/api/proofs-of-life/proofs-by-registration-number/{registrationNumberId}": {
    get: operations["ProofOfLifeController_getProofsByRegistrationNumber"];
  };
  "/api/users": {
    get: operations["UserController_findAll"];
    post: operations["UserController_create"];
  };
  "/api/users/{id}": {
    get: operations["UserController_findOne"];
    delete: operations["UserController_remove"];
  };
  "/api/users/{id}/name": {
    put: operations["UserController_updateLastsNameAndFirstName"];
  };
  "/api/users/{id}/login": {
    put: operations["UserController_updateEmailAndPhone"];
  };
  "/api/users/{id}/password": {
    put: operations["UserController_updatePassword"];
  };
  "/api/users/enable/{id}": {
    put: operations["UserController_enable"];
  };
  "/api/users/disable/{id}": {
    put: operations["UserController_disable"];
  };
  "/api/locations/departments": {
    get: operations["LocationController_getDepartments"];
  };
  "/api/locations/department/{departmentId}": {
    get: operations["LocationController_getDepartment"];
  };
  "/api/locations/commons": {
    get: operations["LocationController_getCommons"];
  };
  "/api/locations/commons-by-department/{departmentId}": {
    get: operations["LocationController_getCommonsByDepartment"];
  };
  "/api/locations/common/{commonId}": {
    get: operations["LocationController_getCommon"];
  };
  "/api/locations/boroughs": {
    get: operations["LocationController_getBoroughs"];
  };
  "/api/locations/boroughs-by-common/{commonId}": {
    get: operations["LocationController_getBoroughsByCommon"];
  };
  "/api/locations/borough/{boroughId}": {
    get: operations["LocationController_getBorough"];
  };
  "/api/locations/districts": {
    get: operations["LocationController_getDistricts"];
  };
  "/api/locations/districts-by-borough/{boroughId}": {
    get: operations["LocationController_getDistrictsByBorough"];
  };
  "/api/locations/district/{districtId}": {
    get: operations["LocationController_getDistrict"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateDeviceDto: {
      reference: string;
      enable: boolean;
    };
    UpdateDeviceDto: {
      reference: string;
      enable: boolean;
    };
    CreateDeviceAssignmentDto: {
      deviceId: string;
      departmentId: string;
      commonId: string;
      boroughId: string;
      districtId: string;
    };
    CreateProofOfLifeDto: {
      firstName: string;
      lastName: string;
      /** Format: date-time */
      proofDeviceCreatedDate: string;
      registrationNumber: string;
      npi: string;
      dateOfBirth: string;
      placeOfBirth: string;
      cardNumber: string;
      deviceProofId: string;
      deviceId: string;
      profession: string;
    };
    CreateUserDto: {
      email: string;
      role: string;
      lastName: string;
      firstName: string;
    };
    UpdateUserLastNameAndFirstNameDto: {
      lastName: string;
      firstName: string;
    };
    UpdateUserEmailDto: {
      email: string;
      password: string;
    };
    UpdateUserPasswordDto: {
      oldPassword: string;
      newPassword: string;
      newPasswordConfirm: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {
  AppController_getHello: {
    responses: {
      200: never;
    };
  };
  DeviceController_findAll: {
    parameters?: {
      query?: {
        search?: string;
        take?: number;
        skip?: number;
      };
    };
    responses: {
      200: never;
    };
  };
  DeviceController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateDeviceDto"];
      };
    };
    responses: {
      201: never;
    };
  };
  DeviceController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  DeviceController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateDeviceDto"];
      };
    };
    responses: {
      200: never;
    };
  };
  DeviceController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  DeviceController_enable: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  DeviceController_disable: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  DeviceAssignmentController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateDeviceAssignmentDto"];
      };
    };
    responses: {
      201: never;
    };
  };
  DeviceAssignmentController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  ProofOfLifeController_findAll: {
    parameters: {
      query: {
        firstName: string;
        lastName: string;
        deviceIds: unknown[];
        proofDeviceCreatedDate: unknown[];
        proofReceiveDate: unknown[];
        proofStatus: unknown[];
        search?: string;
        take?: number;
        skip?: number;
      };
    };
    responses: {
      200: never;
    };
  };
  ProofOfLifeController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateProofOfLifeDto"][];
      };
    };
    responses: {
      201: never;
    };
  };
  ProofOfLifeController_last: {
    parameters?: {
      query?: {
        take?: number;
      };
    };
    responses: {
      200: never;
    };
  };
  ProofOfLifeController_stats: {
    responses: {
      200: never;
    };
  };
  ProofOfLifeController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  ProofOfLifeController_verify: {
    parameters: {
      path: {
        proofId: string;
      };
    };
    responses: {
      200: never;
    };
  };
  ProofOfLifeController_getRegistrationNumbers: {
    responses: {
      200: never;
    };
  };
  ProofOfLifeController_getProofsByDevice: {
    parameters: {
      query?: {
        take?: number;
        skip?: number;
      };
      path: {
        deviceId: string;
      };
    };
    responses: {
      200: never;
    };
  };
  ProofOfLifeController_getProofsByRegistrationNumber: {
    parameters: {
      query?: {
        take?: number;
        skip?: number;
      };
      path: {
        registrationNumberId: string;
      };
    };
    responses: {
      200: never;
    };
  };
  UserController_findAll: {
    parameters?: {
      query?: {
        search?: string;
        take?: number;
        skip?: number;
      };
    };
    responses: {
      200: never;
    };
  };
  UserController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserDto"];
      };
    };
    responses: {
      201: never;
    };
  };
  UserController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  UserController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  UserController_updateLastsNameAndFirstName: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserLastNameAndFirstNameDto"];
      };
    };
    responses: {
      200: never;
    };
  };
  UserController_updateEmailAndPhone: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserEmailDto"];
      };
    };
    responses: {
      200: never;
    };
  };
  UserController_updatePassword: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserPasswordDto"];
      };
    };
    responses: {
      200: never;
    };
  };
  UserController_enable: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  UserController_disable: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getDepartments: {
    parameters?: {
      query?: {
        search?: string;
        take?: number;
        skip?: number;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getDepartment: {
    parameters: {
      path: {
        departmentId: string;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getCommons: {
    parameters?: {
      query?: {
        search?: string;
        take?: number;
        skip?: number;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getCommonsByDepartment: {
    parameters: {
      query?: {
        search?: string;
        take?: number;
        skip?: number;
      };
      path: {
        departmentId: string;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getCommon: {
    parameters: {
      path: {
        commonId: string;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getBoroughs: {
    parameters?: {
      query?: {
        search?: string;
        take?: number;
        skip?: number;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getBoroughsByCommon: {
    parameters: {
      query?: {
        search?: string;
        take?: number;
        skip?: number;
      };
      path: {
        commonId: string;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getBorough: {
    parameters: {
      path: {
        boroughId: string;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getDistricts: {
    parameters?: {
      query?: {
        search?: string;
        take?: number;
        skip?: number;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getDistrictsByBorough: {
    parameters: {
      query?: {
        search?: string;
        take?: number;
        skip?: number;
      };
      path: {
        boroughId: string;
      };
    };
    responses: {
      200: never;
    };
  };
  LocationController_getDistrict: {
    parameters: {
      path: {
        dictrictId: string;
      };
    };
    responses: {
      200: never;
    };
  };
}
